terraform {
  required_providers {
    github = {
      source  = "integrations/github"
      version = "~> 5.0"
    }
  }
}

provider "github" {
    token = var.gh_token
    #base_url = "https://api.github.com"
    owner = "Practical-DevOps-GitHub"
}

resource "github_repository" "example_repo" {
  name             = "github-terraform-task-muhaluk322"
  description      = "This is my repo"
  visibility       = "public"
  auto_init        = true
  #has_issues       = true
}
resource "github_repository_collaborator" "example_collaborator" {
  repository = github_repository.example_repo.name
  username   = "softservedata"
  permission = "admin"
}

resource "github_branch" "develop_branch" {
  repository = github_repository.example_repo.name
  branch     = "develop"
}

resource "github_branch_default" "default"{
  repository = github_repository.example_repo.name
  branch     = "develop"
}

resource "github_branch_protection" "main_protection" {
  repository_id = github_repository.example_repo.node_id
  pattern          = "main"

  required_pull_request_reviews {
    require_code_owner_reviews     = true
  }
}

resource "github_branch_protection" "develop_protection" {
  repository_id = github_repository.example_repo.node_id
  pattern          = "develop"

  required_pull_request_reviews {
    required_approving_review_count = 2
  }
}


resource "github_repository_file" "pr_template_main" {
  repository     = github_repository.example_repo.name
  branch         = "main"
  file           = ".github/pull_request_template.md"
  content        = file("pull_request_template.md")
  commit_message = "Add pull request template into main"
  #overwrite_on_create = true
}

resource "github_repository_file" "code_owner_main" {
  repository     = github_repository.example_repo.name
  branch         = "main"
  file           = ".github/CODEOWNERS"
  content        = "* @softservedata"
  commit_message = "Add CODEOWNERS file into main"
  #overwrite_on_create = true
}

resource "github_repository_file" "pr_template_develop" {
  repository     = github_repository.example_repo.name
  branch         = "develop"
  file           = ".github/pull_request_template.md"
  content        = file("pull_request_template.md")
  commit_message = "Add pull request template develop"
  #overwrite_on_create = true
}


resource "github_repository_deploy_key" "example_repository_deploy_key" {
  repository = github_repository.example_repo.name
  title      = "DEPLOY_KEY"
  key        = "----"
  read_only  = "false"
}

resource "github_repository_webhook" "discord_webhook" {
  repository   = github_repository.example_repo.name
  events       = ["pull_request"]
  configuration {
    url          = "https://discord.com/api/webhooks/1193172225583489064/G0Ph57fFCsJSW_T8frzs3NdjvhyS"
    content_type = "json"
  }
}

resource "github_actions_secret" "pat_secret" {
  repository = github_repository.example_repo.name
  secret_name  = "PAT"
  plaintext_value = "---"
}

variable "gh_token" {
  description = "Token for GitHub"
  type = string
}
